#import <Foundation/Foundation.h>
#import <stdio.h>

@interface Node: NSObject
  
  @property (nonatomic) Node *left;
  @property (nonatomic) Node *right;
  @property (nonatomic) NSInteger value;

-(instancetype)initWithValue:(NSInteger)value left:(Node *)left right:(Node *)right;
  
@end

@implementation Node

-(instancetype)initWithValue:(NSInteger)value left:(Node *)left right:(Node *)right {

  self = [super init];
  self.value = value;
  self.left = left;
  self.right = right;
  return self;
}  
  
@end

@interface BinaryTree: NSObject
  @property (nonatomic) Node *root;

-(void)inorderTraversal;
-(void)preorderTraversal;
-(void)postorderTraversal;  

@end
  
@implementation BinaryTree
  
  -(void)inorderTraversal {

  [self inorderTraverseNode:self.root];
}

  -(void)preorderTraversal {

  [self preorderTraverseNode:self.root];
}

  -(void)postorderTraversal {

  [self postorderTraverseNode:self.root];
}

-(void)inorderTraverseNode:(Node *)node {

  if(node == nil) {
    return;
  }
  
  [self inorderTraverseNode:node.left];
  NSLog(@"node: %i", node.value);
  [self inorderTraverseNode:node.right];
}
 

-(void)preorderTraverseNode:(Node *)node {

  if(node == nil) {
    return;
  }
  
  NSLog(@"node: %i", node.value);
  [self preorderTraverseNode:node.left];
  [self preorderTraverseNode:node.right];
}

-(void)postorderTraverseNode:(Node *)node {

  if(node == nil) {
    return;
  }
  
  [self postorderTraverseNode:node.left];
  [self postorderTraverseNode:node.right];
  NSLog(@"node: %i", node.value);
}

@end
  